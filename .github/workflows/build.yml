name: Build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '@pybricks/**'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAKEOPTS: -j2

jobs:
  upload_pr_number:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir -p ./pr
          echo $PR_NUMBER > ./pr/pr_number
      - uses: actions/upload-artifact@v3
        with:
          name: pr_number
          path: pr/

  mpy_cross:
    name: mpy-cross
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Build mpy-cross
      run: make $MAKEOPTS -C micropython/mpy-cross
    - name: Upload mpy-cross
      if: ${{ success() }}
      uses: actions/upload-artifact@v3
      with:
        name: mpy-cross
        path: micropython/mpy-cross/build/mpy-cross

  firmware:
    name: firmware
    strategy:
      fail-fast: false
      matrix:
        hub: [cityhub]
    needs: [mpy_cross]
    runs-on: ubuntu-22.04
    steps:
    - name: Install cross-compiler
      run: sudo apt-get update && sudo apt-get install --yes gcc-arm-none-eabi
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - name: Download mpy-cross
      uses: actions/download-artifact@v3
      with:
        name: mpy-cross
        path: micropython/mpy-cross/build
    - name: Fix file permission
      run: chmod +x micropython/mpy-cross/build/mpy-cross
    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Python packages
      run:  python -m pip install azure-cosmosdb-table GitPython
    - name: Build firmware (pull request)
      if: ${{ github.base_ref != null }}
      run: .github/build-each-commit.py ${{ matrix.hub }} ${{ github.sha }}
    - name: Build firmware (non-master branch)
      if: ${{ github.base_ref == null && github.ref != 'refs/heads/master' }}
      env:
        STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
        STORAGE_KEY: ${{ secrets.STORAGE_KEY }}
        FIRMWARE_SIZE_TABLE: ${{ secrets.FIRMWARE_SIZE_TABLE }}
      run: .github/build-each-commit.py ${{ matrix.hub }} ${{ github.ref_name }}
    - name: Build firmware (master branch)
      if: ${{ github.base_ref == null && github.ref == 'refs/heads/master' }}
      run: make -C bricks/${{ matrix.hub }}
    - name: Extract firmware.zip for upload
      if: ${{ success()}}
      working-directory: bricks/${{ matrix.hub }}/build
      run: unzip firmware.zip -d upload
    - name: Upload firmware
      if: ${{ success()}}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.hub }}-firmware-build-${{ github.run_number }}
        path: bricks/${{ matrix.hub }}/build/upload/*
